import numpy

#################################################################################
# Explicit Mid Point,  tambien llamado Runge2, Hairer, p. 135
def EMP():
    c=numpy.array([0.,1./2.],float)
    A=numpy.array([[0.,0.],[1./2.,0.]],float)
    b=numpy.array([0.,1.],float)
    return c, A, b
#################################################################################
def Heun3():
    c=numpy.array([0,1./3.,2./3.],float)
    A=numpy.array([[0.,0.,0.],[1./3.,0.,0.],[0.,2./3.,0.]],float)
    b=numpy.array([1./4.,0.,3./4.],float)
    return c, A, b
#################################################################################
# Runge-Kutta classic
def RKclassic():
    c = numpy.array([0.,1./2., 1./2., 1],float)
    A = numpy.array([[0.,0.,0.,0.],
                     [1./2.,0.,0.,0.],
                     [0.,1./2.,0.,0.],
                     [0.,0.,1.,0.]],float)
    b = numpy.array([1./6.,1./3.,1./3.,1./6.],float)
    return c, A, b
#################################################################################
def regla3octavos():
    c=numpy.array([0,1./3.,2./3.,1.],float)
    A=numpy.array([[0.,0.,0.,0.],[1./3.,0.,0.,0.],[-1./3.,1.,0.,0.],[1.,-1.,1.,0.]],float)
    b=numpy.array([1./8.,3./8.,3./8.,1./8.],float)
    return c, A, b
#################################################################################
def dop5():
    c=numpy.array([0.,1./5.,3./10.,4./5.,8./9.,1.],float)
    A=numpy.array([[0.,0.,0.,0.,0.,0.],
                  [1./5.,0.,0.,0.,0.,0.],
                  [3./40.,9./40.,0.,0.,0.,0.],
                  [44./45.,-56./15.,32./9.,0.,0.,0.],
                  [19372./6561.,-25360./2187.,64448./6561.,-212./729.,0.,0.],
                  [9017./3168.,-355./33.,46732./5247.,49./176.,-5103./18656.,0.]],float)
    b=numpy.array([35./384.,0.,500./1113.,125./192.,-2187./6784.,11./84.],float)
    return c, A, b
#################################################################################
# https://www.researchgate.net/publication/337485986_Runge_Kutta_Fehlberg_78_MATLAB_code
def Fehlberg7():
    c=numpy.array([0.,2./27.,1./9.,1./6.,5./12.,1./2.,5./6.,1./6.,2./3.,1./3.,1.,0.,1.],float)
    A=numpy.array([[0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],
                  [2./27.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],
                  [1./36.,1./12.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],
                  [1./24.,0.,1./8.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.],
                  [5./12.,0.,-25./16.,25./16.,0.,0.,0.,0.,0.,0.,0.,0.,0.],
                  [1./20.,0.,0.,1./4.,1./5.,0.,0.,0.,0.,0.,0.,0.,0.],
                  [-25./108.,0.,0.,125./108.,-65./27.,125./54.,0.,0.,0.,0.,0.,0.,0.],
                  [31./300.,0.,0.,0.,61./225.,-2./9.,13./900.,0.,0.,0.,0.,0.,0.],
                  [2.,0.,0.,-53./6.,704./45.,-107./9.,67./90.,3.,0.,0.,0.,0.,0.],
                  [-91./108.,0.,0.,23./108.,-976./135.,311./54.,-19./60.,17./6.,-1./12.,0.,0.,0.,0.],
                  [2383./4100.,0.,0.,-341./164.,4496./1025.,-301./82.,2133./4100.,45./82.,45./164.,18./41.,0.,0.,0.],
                  [3./205.,0.,0.,0.,0.,-6./41.,-3./205.,-3./41.,3./41.,6./41.,0.,0.,0.],
                  [-1777./4100.,0.,0.,-341./164.,4496./1025.,-289./82.,2193./4100.,51./82.,33./164.,12./41.,0.,1.,0.]],float)
    b=numpy.array([41./840.,0.,0.,0.,0.,34./105.,9./35.,9./35.,9./280.,9./280.,41./840.,0.,0.],float)
    return c, A, b
#################################################################################